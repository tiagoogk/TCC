/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'genome_collection.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/genomecoll/GC_SeqIdAlias.hpp>
#include <objects/seqloc/Seq_id.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

BEGIN_NAMED_ENUM_IN_INFO("", CGC_SeqIdAlias_Base::, ESimilarity, true)
{
    SET_ENUM_INTERNAL_NAME("GC-SeqIdAlias", "similarity");
    SET_ENUM_MODULE("NCBI-GenomeCollection");
    ADD_ENUM_VALUE("unknown", eSimilarity_unknown);
    ADD_ENUM_VALUE("identical", eSimilarity_identical);
    ADD_ENUM_VALUE("different", eSimilarity_different);
}
END_ENUM_INFO

void CGC_SeqIdAlias_Base::ResetPublic(void)
{
    if ( !m_Public ) {
        m_Public.Reset(new TPublic());
        return;
    }
    (*m_Public).Reset();
}

void CGC_SeqIdAlias_Base::SetPublic(CGC_SeqIdAlias_Base::TPublic& value)
{
    m_Public.Reset(&value);
}

void CGC_SeqIdAlias_Base::ResetGpipe(void)
{
    m_Gpipe.Reset();
}

void CGC_SeqIdAlias_Base::SetGpipe(CGC_SeqIdAlias_Base::TGpipe& value)
{
    m_Gpipe.Reset(&value);
}

CGC_SeqIdAlias_Base::TGpipe& CGC_SeqIdAlias_Base::SetGpipe(void)
{
    if ( !m_Gpipe )
        m_Gpipe.Reset(new TGpipe());
    return (*m_Gpipe);
}

void CGC_SeqIdAlias_Base::ResetGi(void)
{
    m_Gi.Reset();
}

void CGC_SeqIdAlias_Base::SetGi(CGC_SeqIdAlias_Base::TGi& value)
{
    m_Gi.Reset(&value);
}

CGC_SeqIdAlias_Base::TGi& CGC_SeqIdAlias_Base::SetGi(void)
{
    if ( !m_Gi )
        m_Gi.Reset(new TGi());
    return (*m_Gi);
}

void CGC_SeqIdAlias_Base::Reset(void)
{
    ResetPublic();
    ResetGpipe();
    ResetGi();
    ResetSimilarity();
}

BEGIN_NAMED_BASE_CLASS_INFO("GC-SeqIdAlias", CGC_SeqIdAlias)
{
    SET_CLASS_MODULE("NCBI-GenomeCollection");
    ADD_NAMED_REF_MEMBER("public", m_Public, CSeq_id);
    ADD_NAMED_REF_MEMBER("gpipe", m_Gpipe, CSeq_id)->SetOptional();
    ADD_NAMED_REF_MEMBER("gi", m_Gi, CSeq_id)->SetOptional();
    ADD_NAMED_ENUM_MEMBER("similarity", m_Similarity, ESimilarity)->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    info->RandomOrder();
    info->CodeVersion(22001);
    info->DataSpec(ncbi::EDataSpec::eASN);
}
END_CLASS_INFO

// constructor
CGC_SeqIdAlias_Base::CGC_SeqIdAlias_Base(void)
    : m_Similarity((ESimilarity)(0))
{
    memset(m_set_State,0,sizeof(m_set_State));
    if ( !IsAllocatedInPool() ) {
        ResetPublic();
    }
}

// destructor
CGC_SeqIdAlias_Base::~CGC_SeqIdAlias_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

